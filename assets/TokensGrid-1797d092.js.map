{"version":3,"file":"TokensGrid-1797d092.js","sources":["../../src/components/TokensGrid.tsx"],"sourcesContent":["import '../styles/tokens-grid.css'\nimport { Unstyled } from '@storybook/blocks'\nimport * as tokens from '@vhalmeida-ui/tokens'\nimport { colors, fontSizes } from '@vhalmeida-ui/tokens'\nimport React from 'react'\n\ninterface TokensGridProps {\n  tokens: Record<string, string>\n  hasRemValue?: boolean\n  tokenType?: keyof typeof tokens\n}\n\nfunction getPixelSize(remString: string) {\n  return Number(remString.replace('rem', '')) * 16\n}\n\nfunction getGlobalTBodyStyle(\n  tokenType: keyof typeof tokens | undefined,\n  value: string,\n): React.CSSProperties {\n  console.log(tokenType)\n  switch (tokenType) {\n    case 'fontSizes':\n      return {\n        fontSize: value,\n      }\n    case 'fontWeights':\n      return {\n        fontWeight: value,\n      }\n    case 'lineHeights':\n      return {\n        lineHeight: value,\n      }\n    case 'fonts':\n      return {\n        fontFamily: value,\n        fontSize: fontSizes.md,\n      }\n    default:\n      return {}\n  }\n}\n\nexport function TokensGrid({\n  tokens,\n  hasRemValue = false,\n  tokenType,\n}: TokensGridProps) {\n  return (\n    <Unstyled>\n      <table className={'tokens-grid'}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Value</th>\n            {hasRemValue && <th>Pixels</th>}\n            {hasRemValue && <th></th>}\n          </tr>\n        </thead>\n\n        <tbody>\n          {Object.entries(tokens).map(([key, value]) => {\n            console.log(getGlobalTBodyStyle(tokenType, value))\n            return (\n              <tr key={key} style={getGlobalTBodyStyle(tokenType, value)}>\n                <td>${key}</td>\n                <td>{value}</td>\n                {hasRemValue && <td>{getPixelSize(value)}px</td>}\n                {hasRemValue && tokenType === 'space' && (\n                  <td>\n                    <div\n                      style={{\n                        width: `${getPixelSize(value)}px`,\n                        background: 'cyan',\n                        height: '10px',\n                      }}\n                    />\n                  </td>\n                )}\n                {hasRemValue && tokenType === 'fontSizes' && (\n                  <td>\n                    <p>Lorem</p>\n                  </td>\n                )}\n                {tokenType === 'fontWeights' && (\n                  <td>\n                    <p>Lorem ipsum</p>\n                  </td>\n                )}\n                {tokenType === 'radii' && (\n                  <td>\n                    <div\n                      style={{\n                        width: '50px',\n                        height: '50px',\n                        backgroundColor: colors.ignite300,\n                        borderRadius: value,\n                      }}\n                    />\n                  </td>\n                )}\n                {tokenType === 'lineHeights' && (\n                  <td>\n                    <p style={{ backgroundColor: `${colors.gray400}33` }}>\n                      Lorem ipsum\n                    </p>\n                    <p style={{ backgroundColor: `${colors.gray400}33` }}>\n                      Dolor sit amet\n                    </p>\n                  </td>\n                )}\n                {tokenType === 'fonts' && (\n                  <td>\n                    <p>Lorem ipsum dolor sit amet</p>\n                  </td>\n                )}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </Unstyled>\n  )\n}\n"],"names":["getPixelSize","remString","getGlobalTBodyStyle","tokenType","value","fontSizes","TokensGrid","tokens2","hasRemValue","jsx","Unstyled","jsxs","key","colors"],"mappings":"8IAYA,SAAAA,EAAAC,EAAA,CACE,OAAA,OAAAA,EAAA,QAAA,MAAA,EAAA,CAAA,EAAA,EACF,CAEA,SAAAC,EAAAC,EAAAC,EAAA,CAKE,OADA,QAAA,IAAAD,CAAA,EACAA,EAAA,CAAmB,IAAA,YAEf,MAAA,CAAO,SAAAC,CACK,EACZ,IAAA,cAEA,MAAA,CAAO,WAAAA,CACO,EACd,IAAA,cAEA,MAAA,CAAO,WAAAA,CACO,EACd,IAAA,QAEA,MAAA,CAAO,WAAAA,EACO,SAAAC,EAAA,EACQ,EACtB,QAEA,MAAA,EAAQ,CAEd,CAEO,SAAAC,EAAA,CAAoB,OAAAC,EACzB,YAAAC,EAAA,GACc,UAAAL,CAEhB,EAAA,CACE,OAAAM,EAAA,IAAAC,EAAA,CAAA,SAAAC,EAAAA,KAAA,QAAA,CAAA,UAAA,cAAA,SAAA,CAGMF,EAAA,IAAA,QAAA,CAAA,SAAAE,EAAAA,KAAA,KAAA,CAAA,SAAA,CAEIF,EAAAA,IAAA,KAAA,CAAA,SAAA,MAAA,CAAA,EAAQA,EAAAA,IAAA,KAAA,CAAA,SAAA,OAAA,CAAA,EACCD,GAAAC,EAAAA,IAAA,KAAA,CAAA,SAAA,QAAA,CAAA,EACiBD,GAAAC,EAAAA,IAAA,KAAA,EAAA,CACN,CAAA,CAAA,CAAA,CAAA,EAExBA,EAAAA,IAAA,QAAA,CAAA,SAAA,OAAA,QAAAF,CAAA,EAAA,IAAA,CAAA,CAAAK,EAAAR,CAAA,KAII,QAAA,IAAAF,EAAAC,EAAAC,CAAA,CAAA,EACAO,EAAA,KAAA,KAAA,CAAA,MAAAT,EAAAC,EAAAC,CAAA,EAAA,SAAA,CAEIO,OAAA,KAAA,CAAA,SAAA,CAAI,IAAAC,CAAE,EAAA,EAAIH,EAAAA,IAAA,KAAA,CAAA,SAAAL,CAAA,CAAA,EACCI,GAAAG,EAAA,KAAA,KAAA,CAAA,SAAA,CACUX,EAAAI,CAAA,EAAkB,IAAE,EAAA,EAAEI,GAAAL,IAAA,SAAAM,EAAA,IAAA,KAAA,CAAA,SAAAA,EAAA,IAGvC,MAAC,CAAA,MAAA,CACQ,MAAA,GAAAT,EAAAI,CAAA,CAAA,KACwB,WAAA,OACjB,OAAA,MACJ,CACV,CAAA,EAAA,EAEJI,GAAAL,IAAA,aAAAM,EAAA,IAAA,KAAA,CAAA,SAAAA,EAAA,IAAA,IAAA,CAAA,SAAA,OAAA,CAAA,CAAA,CAAA,EAKAN,IAAA,eAAAM,MAAA,KAAA,CAAA,SAAAA,MAAA,IAAA,CAAA,SAAA,aAAA,CAAA,CAAA,CAAA,EAKAN,IAAA,SAAAM,EAAAA,IAAA,KAAA,CAAA,SAAAA,EAAA,IAIE,MAAC,CAAA,MAAA,CACQ,MAAA,OACE,OAAA,OACC,gBAAAI,EAAA,UACgB,aAAAT,CACV,CAChB,CAAA,EAAA,EAEJD,IAAA,eAAAQ,EAAAA,KAAA,KAAA,CAAA,SAAA,CAIEF,EAAAA,IAAA,IAAA,CAAA,MAAA,CAAA,gBAAA,GAAAI,EAAA,OAAA,IAAA,EAAA,SAAA,aAAA,CAAA,EAEAJ,EAAAA,IAAA,IAAA,CAAA,MAAA,CAAA,gBAAA,GAAAI,EAAA,OAAA,IAAA,EAAA,SAAA,gBAAA,CAAA,CAGA,EAAA,EACFV,IAAA,SAAAM,MAAA,KAAA,CAAA,SAAAA,MAAA,IAAA,CAAA,SAAA,4BAAA,CAAA,CAAA,CAAA,CAKA,CAAA,EAAAG,CAAA,EAEJ,EAAA,CAGN,CAAA,CAAA,CAAA,CAAA,CAIR"}